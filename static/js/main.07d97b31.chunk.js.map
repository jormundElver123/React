{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","role","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","backgroundColor","onChange","event","target","rows","newText","toUpperCase","length","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","split","join","filter","element","Alert","height","alert","msg","defaultProps","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.07d97b31.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\">\r\n                {props.aboutText}\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-primary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n          <div className=\"form-check form-switch\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n              onClick={props.toggleMode}\r\n            />\r\n            <label className={`form-check-label text-${props.mode === 'light' ?'dark':'light'}`} htmlFor=\"flexSwitchCheckDefault\">\r\n              {props.mode === 'light' ? 'Light Mode' : 'Dark Mode'}\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set title here\",\r\n  aboutText: \"About\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\n\r\nexport default function TextForm(props) {\r\n\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const UppercaseClick = () => {\r\n    // console.log(\"Uppercase button was clicked\");\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    if(newText.length === 0)\r\n    {\r\n      props.showAlert(\"Text box is empty\", \"danger\");\r\n    }\r\n    else{\r\n      props.showAlert(\"Converted to Uppercase\", \"success\");\r\n    }\r\n  };\r\n\r\n  const LowercaseClick = () => {\r\n    // console.log(\"Lowercase button was clicked\");\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    if(newText.length === 0)\r\n    {\r\n      props.showAlert(\"Text box is empty\", \"danger\");\r\n    }\r\n    else{\r\n      props.showAlert(\"Converted to lowercase\", \"success\");\r\n    }\r\n  };\r\n\r\n  const ResetClick = () => {\r\n    let newtext = \"\";\r\n    setText(newtext);\r\n    if(text.length === 0)\r\n    {\r\n      props.showAlert(\"Text box is empty\", \"danger\");\r\n    }\r\n    else{\r\n      props.showAlert(\"Cleared the text box\", \"success\");\r\n    }\r\n  }\r\n  \r\n  const handleOnChange = (event) => {\r\n    // console.log(\"handleOnChange button was clicked\");\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const HandleCopy =()=>{\r\n    let text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    document.getSelection().removeAllRanges();\r\n    if(text.length === 0)\r\n    {\r\n      props.showAlert(\"Text box is empty\", \"danger\");\r\n    }\r\n    else{\r\n      props.showAlert(\"Copied\", \"success\");\r\n    }\r\n  }\r\n\r\n  const HandleExtraSpaces = ()=>{\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    if(text.length === 0)\r\n    {\r\n      props.showAlert(\"Text box is empty\", \"danger\");\r\n    }\r\n    else{\r\n      props.showAlert(\"Removed Extra Spaces\", \"success\");\r\n    }\r\n  }\r\n  \r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style = {{color:props.mode === 'dark' ?'white':'black'}}>\r\n        <h1> {props.heading} </h1>{\" \"}\r\n        <div className=\"mb-3\">\r\n          <textarea className=\"form-control\" value={text} style = {{backgroundColor:props.mode === 'dark' ?'gray':'white', color:props.mode === 'dark' ?'white':'black'}} id=\"myBox\" onChange={handleOnChange} rows=\"8\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-1 my-1\" onClick={UppercaseClick} > Uppercase</button>\r\n        <button className=\"btn btn-secondary mx-1 my-1\" onClick={LowercaseClick}> Lowercase</button>\r\n        <button className=\"btn btn-danger mx-1 my-1\" onClick={ResetClick}> Reset</button>\r\n        <button className=\"btn btn-success mx-1 my-1\" onClick={HandleCopy}> Copy Text</button>\r\n        <button className=\"btn btn-primary mx-1 my-1\" onClick={HandleExtraSpaces}> Remove Extra Spaces</button>\r\n      </div>\r\n      <div className=\"container my-2\" style = {{color:props.mode === 'dark' ?'white':'black'}}>\r\n        <h1>Your Text Summary</h1>\r\n        <p>{text.split(\" \").filter((element)=>{return element.length!==0}).length} words and {text.length} characters.</p>\r\n        <p>{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes Read</p>\r\n        <h3>Preview</h3>\r\n        <p>{text.length>0 ? text : 'Enter something in the textbox above'}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n  //   const capitalizeFirstWord = (word) =>\r\n  //   {\r\n  //       const lower = word.toLowerCase();\r\n  //       return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  //   }\r\n\r\n  return (\r\n    <div style={{height: '30px'}}>\r\n      {/* //if alert is not null then it will return the div part */}\r\n      {props.alert && (\r\n        <div\r\n          className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n          role=\"alert\">\r\n          {/* {capitalizeFirstWord(props.alert.type)} :  */}\r\n          {props.alert.msg}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","// import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport React, { useState } from \"react\";\r\n// import About from \"./components/About\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport TextForm from \"./components/TextForm\";\r\nimport Alert from \"./components/Alert\";\r\n\r\n//for publishing  the app, commenting out the router page\r\n// import {\r\n//   BrowserRouter,\r\n//   Routes,\r\n//   Route,\r\n// } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  const [mode, setMode] = useState('light'); //state variable that tells whether dark mode is enabled or not.\r\n  const [alert, setAlert] = useState(null);\r\n\r\n  //alert is an object now\r\n  const showAlert = (message, type) => {\r\n    setAlert({\r\n      msg: message, \r\n      type: type,\r\n    });\r\n\r\n    setTimeout(() => {\r\n      setAlert(null);\r\n    }, 1500);\r\n  }\r\n\r\n const toggleMode = () => {\r\n    if (mode === \"light\") {\r\n      setMode ('dark');\r\n      document.body.style.backgroundColor = '#212529';\r\n      showAlert(\"Dark Mode has been enabled\", \"success\");\r\n      document.title = 'TextUtils Dark Mode';\r\n    } else {\r\n      setMode('light');\r\n      document.body.style.backgroundColor = 'white';\r\n      showAlert(\"Light Mode has been enabled\", \"success\");\r\n      document.title = 'TextUtils Light Mode';\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n    {/* <BrowserRouter> */}\r\n      {/* using Props */}\r\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\r\n      <Alert alert = {alert}/>\r\n      <div className=\"container\">\r\n          {/* <Routes>\r\n            <Route path=\"about/*\" element={<About />}>\r\n            </Route> */}\r\n            <TextForm heading=\"Enter text to analyze\"  mode={mode} showAlert={showAlert} />\r\n            {/* </Route>\r\n          </Routes> */}\r\n        </div>\r\n    {/* </BrowserRouter> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}